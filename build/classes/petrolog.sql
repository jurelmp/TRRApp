/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 * Author:  JurelP
 * Created: Feb 26, 2017
 */

CREATE TABLE accounts(
    "ID" INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    "CODE" VARCHAR(40) NOT NULL,
    "NAME" VARCHAR(50) NOT NULL,
    "DATE_CREATED" DATE NOT NULL,
    "DATE_UPDATED" DATE NOT NULL,
    "ACTIVE" SMALLINT DEFAULT 0);

CREATE TABLE transactions(
    "ACCOUNT_ID" INTEGER NOT NULL,
    "ID" INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    "REFERENCE_NO" VARCHAR(30),
    "DATE" DATE,
    "PAYEE" VARCHAR(50),
    "DEPOSIT" FLOAT DEFAULT 0.00,
    "PAYMENT" FLOAT DEFAULT 0.00,
    "DESCRIPTION" VARCHAR(255),
    "IS_CLEAR" SMALLINT NOT NULL DEFAULT 0,
    "DATE_CREATED" DATE NOT NULL,
    "DATE_UPDATED" DATE NOT NULL,
    FOREIGN KEY (ACCOUNT_ID)
    REFERENCES ACCOUNTS (ID));

CREATE TABLE others(
    "ID" INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    "DETAILS" VARCHAR(255),
    "AMOUNT" FLOAT DEFAULT 0.00
);

CREATE TABLE additionals(
    "ID" INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    "DETAILS" VARCHAR(255),
    "AMOUNT" FLOAT DEFAULT 0.00
);

CREATE TABLE on_date_funds(
    "ID" INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    "DETAILS" VARCHAR(255),
    "AMOUNT" FLOAT DEFAULT 0.00
);


-- BANK MANAGER QUERIES

-- [ACTUAL QUERY]
-- SELECT ACCOUNTS.CODE AS "BANK CODE", ABS(SUM(TRANSACTIONS.PAYMENT) - SUM(TRANSACTIONS.DEPOSIT)) AS "ACTUAL"
-- FROM TRANSACTIONS JOIN ACCOUNTS
-- ON ACCOUNTS.ID = TRANSACTIONS.ACCOUNT_ID
-- WHERE TRANSACTIONS."DATE" <= CURRENT_DATE AND ACCOUNTS.CODE = 'AUB-PLC'
-- GROUP BY ACCOUNTS.CODE
-- ORDER BY ACCOUNTS.CODE ASC;


-- [PRELIMINARY QUERY]
-- SELECT ACCOUNTS.CODE AS "BANK CODE", ABS(SUM(TRANSACTIONS.PAYMENT) - SUM(TRANSACTIONS.DEPOSIT)) AS "ACTUAL"
-- FROM TRANSACTIONS JOIN ACCOUNTS
-- ON ACCOUNTS.ID = TRANSACTIONS.ACCOUNT_ID
-- WHERE TRANSACTIONS."DATE" <= DATE('2017-03-16') 
-- AND ACCOUNTS.CODE IN ('AUB-PLC', 'BOC PLC', 'BPI PLC', 'CBC PLC', 'MBTC PLC', 'PNB-3A', 'PNB-ALT', 'PNB-CHI', 'RCBC CHI', 'RCBC FTI', 'RCBC PLC GATEWAY', 'RCBC-FASI', 'RCBC-PLC', 'RCBC-PLC RECA')
-- GROUP BY ACCOUNTS.CODE
-- ORDER BY ACCOUNTS.CODE ASC;

-- NEW QUERY
-- SELECT ACCOUNTS.CODE AS "BANK CODE", ABS(SUM(TRANSACTIONS.PAYMENT) - SUM(TRANSACTIONS.DEPOSIT)) AS "ACTUAL"
-- FROM TRANSACTIONS JOIN ACCOUNTS
-- ON ACCOUNTS.ID = TRANSACTIONS.ACCOUNT_ID
-- WHERE TRANSACTIONS."DATE" <= DATE('2017-03-16') 
-- AND ACCOUNTS.ACTIVE = 1
-- GROUP BY ACCOUNTS.CODE
-- ORDER BY ACCOUNTS.CODE ASC;

-- |||||||||||| CORRECT QUERY (BELOW)
-- 
-- SELECT 
--     ACCOUNTS.CODE, 
--     CAST(ABS(SUM(CASE WHEN "DATE" <= '2017-03-15' THEN TRANSACTIONS.DEPOSIT - TRANSACTIONS.PAYMENT END)) AS DECIMAL(31,2)) AS "ACTUAL",
--     CAST(ABS(SUM(CASE WHEN "DATE" <= '2017-03-16' THEN TRANSACTIONS.DEPOSIT - TRANSACTIONS.PAYMENT END)) AS DECIMAL(31,2)) AS "PRELIMINARY"
-- FROM ACCOUNTS JOIN TRANSACTIONS
-- ON ACCOUNTS.ID = TRANSACTIONS.ACCOUNT_ID
-- WHERE ACCOUNTS.ACTIVE = 1
-- GROUP BY ACCOUNTS.CODE
-- ORDER BY ACCOUNTS.CODE ASC;